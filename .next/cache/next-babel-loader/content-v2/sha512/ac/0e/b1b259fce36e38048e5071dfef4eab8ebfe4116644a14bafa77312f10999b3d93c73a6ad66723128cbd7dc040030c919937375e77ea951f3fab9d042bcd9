{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\moveit-next\\\\src\\\\components\\\\Countdown.tsx\";\nimport { useContext } from 'react';\nimport { CountdownContext } from '../context/CountdownContext';\nimport styles from '../styles/components/Countdown.module.css';\nexport function Countdown() {\n  const {} = useContext(CountdownContext);\n  const [minLeft, minRight] = String(min).padStart(2, '0').split('');\n  const [secLeft, secRight] = String(sec).padStart(2, '0').split('');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.countdownContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: minLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: minRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: secLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: secRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), hasFinished ? /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: true,\n      type: \"button\",\n      className: styles.startCountdownButton,\n      children: \"Ciclo encerrado\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: isActive ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetCountdown,\n        type: \"button\",\n        className: `${styles.startCountdownButton} ${styles.startCountdownButtonActive}`,\n        children: \"Abandonar ciclo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startCount,\n        type: \"button\",\n        className: styles.startCountdownButton,\n        children: \"Iniciar um ciclo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 25\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["C:/moveit-next/src/components/Countdown.tsx"],"names":["useContext","CountdownContext","styles","Countdown","minLeft","minRight","String","min","padStart","split","secLeft","secRight","sec","countdownContainer","hasFinished","startCountdownButton","isActive","resetCountdown","startCountdownButtonActive","startCount"],"mappings":";;;AAAA,SAA8BA,UAA9B,QAAgD,OAAhD;AACA,SAASC,gBAAT,QAAiC,6BAAjC;AACA,OAAOC,MAAP,MAAmB,2CAAnB;AAEA,OAAO,SAASC,SAAT,GAAqB;AAExB,QAAM,KAAKH,UAAU,CAACC,gBAAD,CAArB;AAEA,QAAM,CAACG,OAAD,EAAUC,QAAV,IAAsBC,MAAM,CAACC,GAAD,CAAN,CAAYC,QAAZ,CAAqB,CAArB,EAAwB,GAAxB,EAA6BC,KAA7B,CAAmC,EAAnC,CAA5B;AACA,QAAM,CAACC,OAAD,EAAUC,QAAV,IAAsBL,MAAM,CAACM,GAAD,CAAN,CAAYJ,QAAZ,CAAqB,CAArB,EAAwB,GAAxB,EAA6BC,KAA7B,CAAmC,EAAnC,CAA5B;AAEA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAEP,MAAM,CAACW,kBAAvB;AAAA,8BACI;AAAA,gCACI;AAAA,oBAAOT;AAAP;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAA,gCACI;AAAA,oBAAOK;AAAP;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAaMG,WAAW,gBACT;AAAQ,MAAA,QAAQ,MAAhB;AAAiB,MAAA,IAAI,EAAC,QAAtB;AAA+B,MAAA,SAAS,EAAEZ,MAAM,CAACa,oBAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADS,gBAKT;AAAA,gBACMC,QAAQ,gBACV;AAAQ,QAAA,OAAO,EAAEC,cAAjB;AAAiC,QAAA,IAAI,EAAC,QAAtC;AAA+C,QAAA,SAAS,EAAG,GAAEf,MAAM,CAACa,oBAAqB,IAAGb,MAAM,CAACgB,0BAA2B,EAA9H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADU,gBAKN;AAAQ,QAAA,OAAO,EAAEC,UAAjB;AAA6B,QAAA,IAAI,EAAC,QAAlC;AAA2C,QAAA,SAAS,EAAEjB,MAAM,CAACa,oBAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANR,qBAlBR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmCH","sourcesContent":["import { useState, useEffect, useContext } from 'react';\r\nimport { CountdownContext } from '../context/CountdownContext';\r\nimport styles from '../styles/components/Countdown.module.css'\r\n\r\nexport function Countdown() {\r\n\r\n    const {} = useContext(CountdownContext)\r\n\r\n    const [minLeft, minRight] = String(min).padStart(2, '0').split('')\r\n    const [secLeft, secRight] = String(sec).padStart(2, '0').split('')\r\n\r\n    return(\r\n        <div>\r\n            <div className={styles.countdownContainer}>\r\n                <div>\r\n                    <span>{minLeft}</span>\r\n                    <span>{minRight}</span>\r\n                </div>\r\n                <span>:</span>\r\n                <div>\r\n                    <span>{secLeft}</span>\r\n                    <span>{secRight}</span>\r\n                </div>\r\n            </div>\r\n\r\n            { hasFinished ? (\r\n                <button disabled type=\"button\" className={styles.startCountdownButton}>\r\n                    Ciclo encerrado\r\n                </button>\r\n            ) : (\r\n                <>\r\n                    { isActive ? (\r\n                    <button onClick={resetCountdown} type=\"button\" className={`${styles.startCountdownButton} ${styles.startCountdownButtonActive}`}>\r\n                        Abandonar ciclo\r\n                    </button>\r\n                    ) : (\r\n                        <button onClick={startCount} type=\"button\" className={styles.startCountdownButton}>\r\n                            Iniciar um ciclo\r\n                        </button>\r\n                    ) } \r\n                </>\r\n            ) }\r\n\r\n                      \r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}