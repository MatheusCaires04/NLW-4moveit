{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\moveit-next\\\\src\\\\context\\\\ChallengesContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useEffect } from 'react';\nimport challenges from '../../challenges.json';\nexport var ChallengesContext = /*#__PURE__*/createContext({});\nexport function ChallengesProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState(1),\n      level = _useState[0],\n      setLevel = _useState[1];\n\n  var _useState2 = useState(0),\n      currentExperience = _useState2[0],\n      setCurrentExperience = _useState2[1];\n\n  var _useState3 = useState(0),\n      challengesCompleted = _useState3[0],\n      setChallengesCompleted = _useState3[1];\n\n  var _useState4 = useState(null),\n      activeChallenge = _useState4[0],\n      setActiveChallenge = _useState4[1];\n\n  var experienceToNextLevel = Math.pow((level + 1) * 4, 2);\n  useEffect(function () {\n    Notification.requestPermission();\n  }, []);\n  useEffect(function () {}, [level, currentExperience, challengesCompleted]);\n\n  function levelUp() {\n    setLevel(level + 1);\n  }\n\n  function startNewChallenge() {\n    var randomChallengeIndex = Math.floor(Math.random() * challenges.length);\n    var challenge = challenges[randomChallengeIndex];\n    setActiveChallenge(challenge);\n    new Audio('/notifications.mp3').play();\n\n    if (Notification.permission === 'granted') {\n      new Notification('Novo desafio', {\n        body: \"Valendo \".concat(challenge.amount, \" xp!\")\n      });\n    }\n  }\n\n  function resetChallenge() {\n    setActiveChallenge(null);\n  }\n\n  function completeChallenge() {\n    if (!activeChallenge) {\n      return;\n    }\n\n    var amount = activeChallenge.amount;\n    var finalExperience = currentExperience + amount;\n\n    if (finalExperience >= experienceToNextLevel) {\n      finalExperience = finalExperience - experienceToNextLevel;\n      levelUp();\n    }\n\n    setCurrentExperience(finalExperience);\n    setActiveChallenge(null);\n    setChallengesCompleted(challengesCompleted + 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ChallengesContext.Provider, {\n    value: {\n      experienceToNextLevel: experienceToNextLevel,\n      completeChallenge: completeChallenge,\n      level: level,\n      levelUp: levelUp,\n      currentExperience: currentExperience,\n      challengesCompleted: challengesCompleted,\n      startNewChallenge: startNewChallenge,\n      activeChallenge: activeChallenge,\n      resetChallenge: resetChallenge\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChallengesProvider, \"POCod5lVJzLDZnxgMknXr3PjRHI=\");\n\n_c = ChallengesProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChallengesProvider\");","map":{"version":3,"sources":["C:/moveit-next/src/context/ChallengesContext.tsx"],"names":["createContext","useState","useEffect","challenges","ChallengesContext","ChallengesProvider","children","level","setLevel","currentExperience","setCurrentExperience","challengesCompleted","setChallengesCompleted","activeChallenge","setActiveChallenge","experienceToNextLevel","Math","pow","Notification","requestPermission","levelUp","startNewChallenge","randomChallengeIndex","floor","random","length","challenge","Audio","play","permission","body","amount","resetChallenge","completeChallenge","finalExperience"],"mappings":"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","sourcesContent":["import { createContext, useState, ReactNode, useEffect } from 'react'\r\nimport Cookies from 'js-cookie'\r\nimport challenges from '../../challenges.json'\r\n\r\ninterface Challenge {\r\n    type: 'body' | 'eye';\r\n    description: string;\r\n    amount: number;\r\n}\r\n\r\ninterface ChallengesContextData {\r\n    level: number; \r\n    levelUp: () => void;\r\n    currentExperience: number;\r\n    challengesCompleted: number;\r\n    experienceToNextLevel: number;\r\n    startNewChallenge: () => void;\r\n    activeChallenge: Challenge;\r\n    resetChallenge: () => void;\r\n    completeChallenge: () => void;\r\n}\r\n\r\ninterface ChallengesProviderProps {\r\n    children: ReactNode;\r\n}\r\n\r\nexport const ChallengesContext = createContext({} as ChallengesContextData);\r\n\r\nexport function ChallengesProvider({ children }: ChallengesProviderProps) {\r\n    const [level, setLevel] = useState(1)\r\n    const [currentExperience, setCurrentExperience] = useState(0)\r\n    const [challengesCompleted, setChallengesCompleted] = useState(0)\r\n    const [activeChallenge, setActiveChallenge] = useState(null)\r\n\r\n    const experienceToNextLevel = Math.pow((level + 1) * 4, 2)\r\n\r\n    useEffect(() => {\r\n        Notification.requestPermission()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n\r\n    }, [level, currentExperience, challengesCompleted])\r\n\r\n    function levelUp() {\r\n        setLevel(level + 1)\r\n    }\r\n\r\n    function startNewChallenge() {\r\n        const randomChallengeIndex = Math.floor(Math.random() * challenges.length)\r\n        const challenge = challenges[randomChallengeIndex]\r\n\r\n        setActiveChallenge(challenge)\r\n\r\n        new Audio('/notifications.mp3').play()\r\n\r\n        if(Notification.permission === 'granted') {\r\n            new Notification('Novo desafio', {\r\n                body: `Valendo ${challenge.amount} xp!`\r\n            })\r\n        }\r\n    }\r\n\r\n    function resetChallenge() {\r\n        setActiveChallenge(null)\r\n    }\r\n\r\n    function completeChallenge() {\r\n        if(!activeChallenge) {\r\n            return\r\n        }\r\n\r\n        const { amount } = activeChallenge\r\n\r\n        let finalExperience = currentExperience + amount\r\n\r\n        if(finalExperience >= experienceToNextLevel) {\r\n            finalExperience = finalExperience - experienceToNextLevel\r\n            levelUp()\r\n        }\r\n\r\n        setCurrentExperience(finalExperience)\r\n        setActiveChallenge(null)\r\n        setChallengesCompleted(challengesCompleted + 1)\r\n    }\r\n\r\n    return(\r\n        <ChallengesContext.Provider value={{ experienceToNextLevel, completeChallenge, level, levelUp, currentExperience, challengesCompleted, startNewChallenge, activeChallenge, resetChallenge }}>\r\n            { children }\r\n        </ChallengesContext.Provider>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}